{"metadata":{"kernelspec":{"name":"pysparkkernel","display_name":"PySpark","language":""},"language_info":{"name":"pyspark","mimetype":"text/x-python","codemirror_mode":{"name":"python","version":3},"pygments_lexer":"python3"},"qubole":{"kernel_log_url":"https://us.qubole.com/jupyter-notebook-46573/qubole/api/v1/kernel_logs/efee0fb3-70aa-40a8-a8bd-23f9dabb1eab","session_data":{"id":4,"mode":"isolated","spark_ui_url":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtrue","driver_log_url":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.157%3A8042%2Fnode%2Fcontainerlogs%2Fcontainer_1600306013264_0005_01_000001%2Fsdabade"},"cluster":{"id":46573,"state":"UP","name":"jupyter-demo"}},"toc-autonumbering":true,"toc-showtags":true},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003eE-Commerce Usecase - Advanced Analytics (with Sparklens Example)\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"%%configure -f \n{ \n    \"driverMemory\" : \"4g\", \n    \"executorMemory\" : \"10g\", \n    \"conf\" : { \n        \"spark.driver.maxResultSize\": \"1g\",\n        \"spark.jars.packages\": \"qubole:sparklens:0.3.2-s_2.11\",\n        \"spark.extraListeners\": \"com.qubole.sparklens.QuboleJobListener\",\n        \"spark.sparklens.reporting.disabled\": \"true\",\n        \"spark.sparklens.data.dir\": \"s3://uwddefbucket/default/sparklens-reports\",\n        \"spark.qubole.idle.timeout\": 5\n    }\n}","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:51:55.062860Z","ended_at":"2020-09-17T01:52:18.679791Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Kernel Id: efee0fb3-70aa-40a8-a8bd-23f9dabb1eab\nStarting Spark application\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eID\u003c/th\u003e\u003cth\u003eName\u003c/th\u003e\u003cth\u003eYARN Application ID\u003c/th\u003e\u003cth\u003eKind\u003c/th\u003e\u003cth\u003eState\u003c/th\u003e\u003cth\u003eSpark UI\u003c/th\u003e\u003cth\u003eDriver log\u003c/th\u003e\u003cth\u003eCurrent session?\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e4\u003c/td\u003e\u003ctd\u003eisolated_sdabade__qubole_ecommerce1advancedanalyticsipynb_efee0fb370aa40a8a8bd23f9dabb1eab\u003c/td\u003e\u003ctd\u003eapplication_1600306013264_0005\u003c/td\u003e\u003ctd\u003epyspark\u003c/td\u003e\u003ctd\u003eidle\u003c/td\u003e\u003ctd\u003e\u003ca class=\"jpq-ui-links\" data-url=\"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtrue\" data-alt-url=\"\" data-action=\"spark-ui:open\" data-cluster-id=\"46573\" href=\"javascript:void(0)\" onClick=\"return false;\"\u003eLink\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e\u003ca class=\"jpq-ui-links\" data-url=\"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.157%3A8042%2Fnode%2Fcontainerlogs%2Fcontainer_1600306013264_0005_01_000001%2Fsdabade\" data-alt-url=\"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A19888%2Fjobhistory%2Flogs%2F10.0.2.157%3A45454%2Fcontainer_1600306013264_0005_01_000001%2Fcontainer_1600306013264_0005_01_000001%2Fsdabade\" data-action=\"driver-log:open\" data-cluster-id=\"46573\" href=\"javascript:void(0)\" onClick=\"return false;\"\u003eLink\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eâœ”\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"},"metadata":{}},{"name":"stdout","text":"SparkSession available as 'spark'.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"Current session configs: \u003ctt\u003e{'driverMemory': '4g', 'executorMemory': '10g', 'conf': {'spark.driver.maxResultSize': '1g', 'spark.jars.packages': 'qubole:sparklens:0.3.2-s_2.11', 'spark.extraListeners': 'com.qubole.sparklens.QuboleJobListener', 'spark.sparklens.reporting.disabled': 'true', 'spark.sparklens.data.dir': 's3://uwddefbucket/default/sparklens-reports', 'spark.qubole.idle.timeout': 5}, 'kind': 'pyspark'}\u003c/tt\u003e\u003cbr\u003e"},"metadata":{}}]},{"cell_type":"code","source":"%%help","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:52:18.681945Z","ended_at":"2020-09-17T01:52:18.716755Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth\u003eMagic\u003c/th\u003e\n    \u003cth\u003eExample\u003c/th\u003e\n    \u003cth\u003eExplanation\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003einfo\u003c/td\u003e\n    \u003ctd\u003e%%info\u003c/td\u003e\n    \u003ctd\u003eOutputs session information for the current Livy endpoint.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003ecleanup\u003c/td\u003e\n    \u003ctd\u003e%%cleanup -f\u003c/td\u003e\n    \u003ctd\u003eDeletes all sessions for the current Livy endpoint, including this notebook's session. The force flag is mandatory.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003edelete\u003c/td\u003e\n    \u003ctd\u003e%%delete -f -s 0\u003c/td\u003e\n    \u003ctd\u003eDeletes a session by number for the current Livy endpoint. Cannot delete this kernel's session.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003elogs\u003c/td\u003e\n    \u003ctd\u003e%%logs\u003c/td\u003e\n    \u003ctd\u003eOutputs the current session's Livy logs.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003econfigure\u003c/td\u003e\n    \u003ctd\u003e%%configure -f\u003cbr/\u003e{\"executorMemory\": \"1000M\", \"executorCores\": 4}\u003c/td\u003e\n    \u003ctd\u003eConfigure the session creation parameters. The force flag is mandatory if a session has already been\n    created and the session will be dropped and recreated.\u003cbr/\u003eLook at \u003ca href=\"https://livy.incubator.apache.org/docs/latest/rest-api.html\"\u003e\n    Livy's POST /sessions Request Body\u003c/a\u003e for a list of valid parameters. Parameters must be passed in as a JSON string.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003espark\u003c/td\u003e\n    \u003ctd\u003e%%spark -o df\u003cbr/\u003edf = spark.read.parquet('...\u003c/td\u003e\n    \u003ctd\u003eExecutes spark commands.\n    Parameters:\n      \u003cul\u003e\n        \u003cli\u003e-o VAR_NAME: The Spark dataframe of name VAR_NAME will be available in the %%local Python context as a\n          \u003ca href=\"http://pandas.pydata.org/\"\u003ePandas\u003c/a\u003e dataframe with the same name.\u003c/li\u003e\n        \u003cli\u003e-m METHOD: Sample method, either \u003ctt\u003etake\u003c/tt\u003e or \u003ctt\u003esample\u003c/tt\u003e.\u003c/li\u003e\n        \u003cli\u003e-n MAXROWS: The maximum number of rows of a dataframe that will be pulled from Livy to Jupyter.\n            If this number is negative, then the number of rows will be unlimited.\u003c/li\u003e\n        \u003cli\u003e-r FRACTION: Fraction used for sampling.\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003esql\u003c/td\u003e\n    \u003ctd\u003e%%sql -o tables -q\u003cbr/\u003eSHOW TABLES\u003c/td\u003e\n    \u003ctd\u003eExecutes a SQL query against the variable sqlContext (Spark v1.x) or spark (Spark v2.x).\n    Parameters:\n      \u003cul\u003e\n        \u003cli\u003e-o VAR_NAME: The result of the SQL query will be available in the %%local Python context as a\n          \u003ca href=\"http://pandas.pydata.org/\"\u003ePandas\u003c/a\u003e dataframe.\u003c/li\u003e\n        \u003cli\u003e-q: The magic will return None instead of the dataframe (no visualization).\u003c/li\u003e\n        \u003cli\u003e-m, -n, -r are the same as the %%spark parameters above.\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003elocal\u003c/td\u003e\n    \u003ctd\u003e%%local\u003cbr/\u003ea = 1\u003c/td\u003e\n    \u003ctd\u003eAll the code in subsequent lines will be executed locally. Code must be valid Python code.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003esend_to_spark\u003c/td\u003e\n    \u003ctd\u003e%%send_to_spark -i variable -t str -n var\u003c/td\u003e\n    \u003ctd\u003eSends a variable from local output to spark cluster.\n    \u003cbr/\u003e\n    Parameters:\n      \u003cul\u003e\n        \u003cli\u003e-i VAR_NAME: Local Pandas DataFrame(or String) of name VAR_NAME will be available in the %%spark context as a \n          Spark dataframe(or String) with the same name.\u003c/li\u003e\n        \u003cli\u003e-t TYPE: Specifies the type of variable passed as -i. Available options are:\n         `str` for string and `df` for Pandas DataFrame. Optional, defaults to `str`.\u003c/li\u003e\n        \u003cli\u003e-n NAME: Custom name of variable passed as -i. Optional, defaults to -i variable name.\u003c/li\u003e\n        \u003cli\u003e-m MAXROWS: Maximum amount of Pandas rows that will be sent to Spark. Defaults to 2500.\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n"},"metadata":{}}]},{"cell_type":"code","source":"start_date=\"2014-01-01\"\nend_date=\"2020-05-31\"","metadata":{"tags":["parameters"],"qubole":{"execution_info":{"started_at":"2020-09-17T01:52:18.719811Z","ended_at":"2020-09-17T01:52:18.803579Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}}]},{"cell_type":"code","source":"print(\"Start Date = \" + start_date)\nprint(\"End Date = \" + end_date)","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:52:18.807665Z","ended_at":"2020-09-17T01:52:18.894464Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"Start Date = 2014-01-01\nEnd Date = 2020-05-31","output_type":"stream"}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e1.1 - Top 10 Products by Quantity (with Sparklens Example)\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport time\nfrom IPython.display import display\n\nQNL = sc._jvm.com.qubole.sparklens.QuboleNotebookListener.registerAndGet(sc._jsc.sc())\n\nif (QNL.estimateSize() \u003e QNL.getMaxDataSize()):\n  QNL.purgeJobsAndStages()\nstartTime = int(round(time.time() * 1000))\n\ntop10ProductsByQuantity = spark.sql(\"SELECT p.product_name as Product, count(oi.order_item_quantity) as QuantityOrdered from ecommerce_db.order_items oi inner join ecommerce_db.products p on oi.order_item_product_id = p.product_id group by p.product_name order by QuantityOrdered desc limit 10\")\ntop10ProductsByQuantityPDF = top10ProductsByQuantity.toPandas()\ndisplay(top10ProductsByQuantityPDF)\n\nendTime = int(round(time.time() * 1000))\ntime.sleep(QNL.getWaiTimeInSeconds())\nprint(QNL.getStats(startTime, endTime))","metadata":{"qubole":{"import_errors":true,"spark_progress":[{"jobId":2,"name":"toPandas at \u003cstdin\u003e:12","submissionTime":"2020-09-17T01:52:35.419GMT","completionTime":"2020-09-17T01:52:37.885GMT","stageIds":[2,3,4],"jobGroup":"5","status":"SUCCEEDED","numTasks":202,"numActiveTasks":0,"numCompletedTasks":202,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":202,"numActiveStages":0,"numCompletedStages":3,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=2","stages":[{"stageId":2,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=2\u0026attempt=0"},{"stageId":3,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=3\u0026attempt=0"},{"stageId":4,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=4\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:52:18.897794Z","ended_at":"2020-09-17T01:52:44.529043Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"                                         Product  QuantityOrdered\n0               Perfect Fitness Perfect Rip Deck            24515\n1        Nike Men's CJ Elite 2 TD Football Cleat            22247\n2           Nike Men's Dri-FIT Victory Golf Polo            21036\n3               O'Brien Men's Neoprene Life Vest            19298\n4      Field \u0026 Stream Sportsman 16 Gun Fire Safe            17325\n5                    Pelican Sunstream 100 Kayak            15500\n6  Diamondback Women's Serene Classic Comfort Bi            13729\n7              Nike Men's Free 5.0+ Running Shoe            12169\n8  Under Armour Girls' Toddler Spine Surge Runni            10617\n9                     Nike Men's Comfort 2 Slide              328\nTotal tasks in all stages 204\nPer Stage  Utilization\nStage-ID   Wall    Task      Task     IO%    Input     Output    ----Shuffle-----    -WallClockTime-    --OneCoreComputeHours---   MaxTaskMem\n          Clock%  Runtime%   Count                               Input  |  Output    Measured | Ideal   Available| Used%|Wasted%                                  \n       0   34.00   32.55         1    0.1    0.5 KB    0.0 KB    0.0 KB    0.0 KB    00m 02s   00m 00s    00h 00m    8.8   91.2    0.0 KB \n       1   34.00   32.56         1    3.0   11.9 KB    0.0 KB    0.0 KB    0.0 KB    00m 02s   00m 00s    00h 00m    8.9   91.1    0.0 KB \n       2    9.00    7.81         1   87.6  352.6 KB    0.0 KB    0.0 KB    9.4 KB    00m 00s   00m 00s    00h 00m    8.1   91.9  363.1 KB \n       3   18.00   24.01       200    0.0    0.0 KB    0.0 KB    9.4 KB    9.4 KB    00m 01s   00m 00s    00h 00m   12.5   87.5  128.5 MB \n       4    3.00    3.07         1    0.0    0.0 KB    0.0 KB    9.4 KB    0.0 KB    00m 00s   00m 00s    00h 00m    9.2   90.8    0.0 KB \nMax memory which an executor could have taken = 128.5 MB\n\n\n Stage-ID WallClock  OneCore       Task   PRatio    -----Task------   OIRatio  |* ShuffleWrite% ReadFetch%   GC%  *|\n          Stage%     ComputeHours  Count            Skew   StageSkew                                                \n      0   34.92         00h 00m       1    0.10     1.00     0.88     0.00     |*   0.00           0.00     1.85  *|\n      1   34.59         00h 00m       1    0.10     1.00     0.89     0.00     |*   0.00           0.00     1.85  *|\n      2    9.14         00h 00m       1    0.10     1.00     0.81     0.03     |*   3.02           0.00     0.00  *|\n      3   18.19         00h 00m     200   20.00    75.75     0.21     1.00     |*   3.47           0.06     8.57  *|\n      4    3.16         00h 00m       1    0.10     1.00     0.92     0.00     |*   0.00           1.30     0.00  *|\n\nPRatio:        Number of tasks in stage divided by number of cores. Represents degree of\n               parallelism in the stage\nTaskSkew:      Duration of largest task in stage divided by duration of median task.\n               Represents degree of skew in the stage\nTaskStageSkew: Duration of largest task in stage divided by total duration of the stage.\n               Represents the impact of the largest task on stage time.\nOIRatio:       Output to input ration. Total output of the stage (results + shuffle write)\n               divided by total input (input data + shuffle read)\n\nThese metrics below represent distribution of time within the stage\n\nShuffleWrite:  Amount of time spent in shuffle writes across all tasks in the given\n               stage as a percentage\nReadFetch:     Amount of time spent in shuffle read across all tasks in the given\n               stage as a percentage\nGC:            Amount of time spent in GC across all tasks in the given stage as a\n               percentage\n\nIf the stage contributes large percentage to overall application time, we could look into\nthese metrics to check which part (Shuffle write, read fetch or GC is responsible)\n\n\n      \n\n App completion time and cluster utilization estimates with different executor counts\n\n Real App Duration 00m 18s\n Model Estimation  00m 17s\n Model Error       9%\n\n NOTE: 1) Model error could be large when auto-scaling is enabled.\n       2) Model doesn't handles multiple jobs run via thread-pool. For better insights into\n          application scalability, please try such jobs one by one without thread-pool.\n\n       \n Executor count     1  ( 20%) estimated time 00m 17s and estimated cluster utilization 21.07%\n Executor count     2  ( 50%) estimated time 00m 17s and estimated cluster utilization 10.79%\n Executor count     4  ( 80%) estimated time 00m 17s and estimated cluster utilization 5.45%\n Executor count     5  (100%) estimated time 00m 17s and estimated cluster utilization 4.36%\n Executor count     5  (110%) estimated time 00m 17s and estimated cluster utilization 4.36%\n Executor count     6  (120%) estimated time 00m 17s and estimated cluster utilization 3.63%\n Executor count     7  (150%) estimated time 00m 17s and estimated cluster utilization 3.11%\n Executor count    10  (200%) estimated time 00m 17s and estimated cluster utilization 2.18%\n Executor count    15  (300%) estimated time 00m 17s and estimated cluster utilization 1.45%\n Executor count    20  (400%) estimated time 00m 17s and estimated cluster utilization 1.09%\n Executor count    25  (500%) estimated time 00m 17s and estimated cluster utilization 0.87%\n\n\n Time spent in Driver vs Executors\n Driver WallClock Time    00m 13s   71.85%\n Executor WallClock Time  00m 05s   28.15%\n Total WallClock Time     00m 18s\n      \n\n\nMinimum possible time for the app based on the critical path (with infinite resources)   00m 17s\nMinimum possible time for the app with same executors, perfect parallelism and zero skew 00m 14s\nIf we were to run this app with single executor and single core                          00h 00m\n\n       \n Total cores available to the app 10\n\n OneCoreComputeHours: Measure of total compute power available from cluster. One core in the executor, running\n                      for one hour, counts as one OneCoreComputeHour. Executors with 4 cores, will have 4 times\n                      the OneCoreComputeHours compared to one with just one core. Similarly, one core executor\n                      running for 4 hours will OnCoreComputeHours equal to 4 core executor running for 1 hour.\n\n Driver Utilization (Cluster idle because of driver)\n\n Total OneCoreComputeHours available                             00h 03m\n Total OneCoreComputeHours available (AutoScale Aware)           00h 00m\n OneCoreComputeHours wasted by driver                            00h 02m\n\n AutoScale Aware: Most of the calculations by this tool will assume that all executors are available throughout\n                  the runtime of the application. The number above is printed to show possible caution to be\n                  taken in interpreting the efficiency metrics.\n\n Cluster Utilization (Executors idle because of lack of tasks or skew)\n\n Executor OneCoreComputeHours available                  00h 00m\n Executor OneCoreComputeHours used                       00h 00m        14.04%\n OneCoreComputeHours wasted                              00h 00m        85.96%\n\n App Level Wastage Metrics (Driver + Executor)\n\n OneCoreComputeHours wasted Driver               71.85%\n OneCoreComputeHours wasted Executor             24.20%\n OneCoreComputeHours wasted Total                96.05%\n\n       \n\n/usr/lib/environs/e-a-2019.03-py-3.7.3/lib/python3.7/site-packages/pyarrow/__init__.py:152: UserWarning: pyarrow.open_stream is deprecated, please use pyarrow.ipc.open_stream\n  warnings.warn(\"pyarrow.open_stream is deprecated, please use \"","output_type":"stream"}]},{"cell_type":"code","source":"%spark -o top10ProductsByQuantity","metadata":{"qubole":{"spark_progress":[{"jobId":5,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:52:48.416GMT","completionTime":"2020-09-17T01:52:53.903GMT","stageIds":[9,7,8],"jobGroup":"7","status":"SUCCEEDED","numTasks":202,"numActiveTasks":0,"numCompletedTasks":202,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":202,"numActiveStages":0,"numCompletedStages":3,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=5","stages":[{"stageId":9,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=9\u0026attempt=0"},{"stageId":7,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=7\u0026attempt=0"},{"stageId":8,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=8\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:52:44.531160Z","ended_at":"2020-09-17T01:52:54.032090Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e1.2 - Top 10 Products by Quantity - Matplotlib Visualize\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"%%local\n%matplotlib inline\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ntop10ProductsByQuantity.plot(kind='bar', x='Product', y='QuantityOrdered', color='blue')\n\nplt.show()","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:52:54.036166Z","ended_at":"2020-09-17T01:52:54.245729Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":35,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cFigure size 432x288 with 1 Axes\u003e","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e2.1 - Top 10 Products by Views\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nfrom IPython.display import display\n\ntop10ProductsByViews = spark.sql(\"select url as URL, count(*) as Views from ecommerce_db.access_logs where url like '%\\/product\\/%' group by url order by Views desc limit 10\")\ntop10ProductsByViewsPDF = top10ProductsByViews.toPandas()\n\ndisplay(top10ProductsByViewsPDF)","metadata":{"qubole":{"spark_progress":[{"jobId":6,"name":"toPandas at \u003cstdin\u003e:5","submissionTime":"2020-09-17T01:52:55.401GMT","completionTime":"2020-09-17T01:52:59.977GMT","stageIds":[12,10,11],"jobGroup":"8","status":"SUCCEEDED","numTasks":203,"numActiveTasks":0,"numCompletedTasks":203,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":203,"numActiveStages":0,"numCompletedStages":3,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=6","stages":[{"stageId":12,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=12\u0026attempt=0"},{"stageId":10,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=10\u0026attempt=0"},{"stageId":11,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=11\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:52:54.248844Z","ended_at":"2020-09-17T01:53:01.667230Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"                                                 URL  Views\n0  /department/apparel/category/cleats/product/Pe...   1926\n1  /department/apparel/category/featured%20shops/...   1793\n2  /department/golf/category/women's%20apparel/pr...   1780\n3  /department/apparel/category/men's%20footwear/...   1757\n4  /department/fan%20shop/category/water%20sports...   1104\n5  /department/fan%20shop/category/indoor/outdoor...   1084\n6  /department/fan%20shop/category/camping%20\u0026%20...   1059\n7  /department/fan%20shop/category/fishing/produc...   1028\n8  /department/footwear/category/cardio%20equipme...   1004\n9  /department/footwear/category/fitness%20access...    939","output_type":"stream"}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e2.2 - Transform DataFrame to add a new column ProductName\u003c/span\u003e","metadata":{"qubole":{}}},{"cell_type":"code","source":"from pyspark.sql.functions import UserDefinedFunction\nfrom pyspark.sql.types import StringType\nimport pandas as pd\n\ndef get_product_name(row):\n    url = row['URL']\n    splitURL = url.split('/')\n    length = len(splitURL)\n    productName = splitURL[length-1]\n    productName = productName.replace('%20', ' ')\n    return productName\n\ntop10ProductsByViewsPDF['Product'] = top10ProductsByViewsPDF.apply(lambda row: get_product_name(row), axis=1)\n\ntop10ProductsByViewsSDF = spark.createDataFrame(top10ProductsByViewsPDF)","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:53:01.670305Z","ended_at":"2020-09-17T01:53:02.012263Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"/media/ebs2/yarn/local/usercache/sdabade/appcache/application_1600306013264_0005/container_1600306013264_0005_01_000001/pyspark.zip/pyspark/sql/session.py:714: UserWarning: createDataFrame attempted Arrow optimization because 'spark.sql.execution.arrow.enabled' is set to true; however, failed by the reason below:\n  'JavaPackage' object is not callable\nAttempting non-optimization as 'spark.sql.execution.arrow.fallback.enabled' is set to true.","output_type":"stream"}]},{"cell_type":"code","source":"%spark -o top10ProductsByViewsSDF","metadata":{"qubole":{"spark_progress":[{"jobId":9,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:53:05.295GMT","completionTime":"2020-09-17T01:53:06.710GMT","stageIds":[15],"jobGroup":"11","status":"SUCCEEDED","numTasks":7,"numActiveTasks":0,"numCompletedTasks":7,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":7,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=9","stages":[{"stageId":15,"numTasks":7,"numCompleteTasks":7,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=15\u0026attempt=0"}]},{"jobId":8,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:53:03.705GMT","completionTime":"2020-09-17T01:53:05.285GMT","stageIds":[14],"jobGroup":"11","status":"SUCCEEDED","numTasks":4,"numActiveTasks":0,"numCompletedTasks":4,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":4,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=8","stages":[{"stageId":14,"numTasks":4,"numCompleteTasks":4,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=14\u0026attempt=0"}]},{"jobId":7,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:53:02.327GMT","completionTime":"2020-09-17T01:53:03.695GMT","stageIds":[13],"jobGroup":"11","status":"SUCCEEDED","numTasks":1,"numActiveTasks":0,"numCompletedTasks":1,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":1,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=7","stages":[{"stageId":13,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=13\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:53:02.016040Z","ended_at":"2020-09-17T01:53:07.659791Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e2.3 - Top10 Products by Views - Matplotlib Visualize\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"%%local\n%matplotlib inline\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ntop10ProductsByViewsSDF.plot(kind='bar', x='Product', y='Views', color='blue')\n\nplt.show()","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:53:07.662490Z","ended_at":"2020-09-17T01:53:07.897652Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cFigure size 432x288 with 1 Axes\u003e","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e3) Apply Intersection :: Are \"most-frequently-viewed\" products also \"most-frequently-bought\"?\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport pandas as pd\nfrom IPython.display import display\n    \nviewsVsQuantityJoinPDF = top10ProductsByViewsPDF.join(top10ProductsByQuantityPDF.set_index('Product'), on='Product')\nviewsVsQuantityFilteredPDF = viewsVsQuantityJoinPDF.filter(['Product', 'Views', 'QuantityOrdered'], axis=1)\n\nviewsVsQuantityFilteredSDF = spark.createDataFrame(viewsVsQuantityFilteredPDF)\n\ndisplay(viewsVsQuantityFilteredPDF)","metadata":{"qubole":{"execution_info":{"started_at":"2020-09-17T01:53:07.899900Z","ended_at":"2020-09-17T01:53:08.709618Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"                                         Product  Views  QuantityOrdered\n0               Perfect Fitness Perfect Rip Deck   1926          24515.0\n1         adidas Kids' RG III Mid Football Cleat   1793              NaN\n2           Nike Men's Dri-FIT Victory Golf Polo   1780          21036.0\n3        Nike Men's CJ Elite 2 TD Football Cleat   1757          22247.0\n4                    Pelican Sunstream 100 Kayak   1104          15500.0\n5               O'Brien Men's Neoprene Life Vest   1084          19298.0\n6  Diamondback Women's Serene Classic Comfort Bi   1059          13729.0\n7      Field \u0026 Stream Sportsman 16 Gun Fire Safe   1028          17325.0\n8              Nike Men's Free 5.0+ Running Shoe   1004          12169.0\n9    Under Armour Hustle Storm Medium Duffle Bag    939              NaN\n/media/ebs2/yarn/local/usercache/sdabade/appcache/application_1600306013264_0005/container_1600306013264_0005_01_000001/pyspark.zip/pyspark/sql/session.py:714: UserWarning: createDataFrame attempted Arrow optimization because 'spark.sql.execution.arrow.enabled' is set to true; however, failed by the reason below:\n  'JavaPackage' object is not callable\nAttempting non-optimization as 'spark.sql.execution.arrow.fallback.enabled' is set to true.","output_type":"stream"}]},{"cell_type":"markdown","source":"\u003cbr/\u003e\u003cbr/\u003e\u003cspan style=\"font-size:x-large; font-weight:bold;\"\u003e4 - SQL :: Orders Count by Date - Visualize\u003c/span\u003e","metadata":{}},{"cell_type":"code","source":"%%sql \n\nselect \n    date_format(order_date, 'YYYY/MM/dd') as Order_Date, \n    count(*) as Total_Orders \nfrom \n    ecommerce_db.orders\ngroup by \n    date_format(order_date,'YYYY/MM/dd') \norder by \n    date_format(order_date,'YYYY/MM/dd')","metadata":{"qubole":{"charts_meta":{"selectedXAxis":"Order_Date","selectedYAxis":"Total_Orders","selectedChartType":"bar-chart","aggFunc":"sum","logX":false,"logY":false,"keys":["Order_Date"],"values":["Total_Orders"],"chartConfig":{"barmode":"group","previewMode":false}},"spark_progress":[{"jobId":12,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:53:13.530GMT","completionTime":"2020-09-17T01:53:13.594GMT","stageIds":[21,22,23],"jobGroup":"13","status":"SUCCEEDED","numTasks":202,"numActiveTasks":0,"numCompletedTasks":202,"numSkippedTasks":201,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":1,"numActiveStages":-2,"numCompletedStages":1,"numSkippedStages":2,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=12","stages":[{"stageId":21,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=21\u0026attempt=0"},{"stageId":22,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=22\u0026attempt=0"},{"stageId":23,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=23\u0026attempt=0"}]},{"jobId":11,"name":"runJob at PythonRDD.scala:153","submissionTime":"2020-09-17T01:53:12.501GMT","completionTime":"2020-09-17T01:53:13.514GMT","stageIds":[19,20,18],"jobGroup":"13","status":"SUCCEEDED","numTasks":202,"numActiveTasks":0,"numCompletedTasks":202,"numSkippedTasks":1,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":201,"numActiveStages":-1,"numCompletedStages":2,"numSkippedStages":1,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=11","stages":[{"stageId":19,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=19\u0026attempt=0"},{"stageId":20,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=20\u0026attempt=0"},{"stageId":18,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=18\u0026attempt=0"}]},{"jobId":10,"name":"toJavaRDD at NativeMethodAccessorImpl.java:0","submissionTime":"2020-09-17T01:53:09.339GMT","completionTime":"2020-09-17T01:53:12.452GMT","stageIds":[16,17],"jobGroup":"13","status":"SUCCEEDED","numTasks":201,"numActiveTasks":0,"numCompletedTasks":201,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":201,"numActiveStages":0,"numCompletedStages":2,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=10","stages":[{"stageId":16,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=16\u0026attempt=0"},{"stageId":17,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=17\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:53:08.712446Z","ended_at":"2020-09-17T01:53:14.229305Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":41,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"chart-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class='chart-shell-data' style='display:none !important;'\u003e'[[\"Order_Date\", \"Total_Orders\"], [\"2013-11-10\", \"170\"], [\"2014-05-17\", \"158\"], [\"2014-01-31\", \"223\"], [\"2013-12-28\", \"222\"], [\"2014-02-14\", \"174\"], [\"2013-09-11\", \"109\"], [\"2014-04-13\", \"117\"], [\"2014-02-18\", \"219\"], [\"2013-08-27\", \"188\"], [\"2013-11-11\", \"246\"], [\"2013-12-26\", \"286\"], [\"2014-04-18\", \"232\"], [\"2014-05-02\", \"198\"], [\"2013-10-11\", \"221\"], [\"2013-08-19\", \"93\"], [\"2014-02-28\", \"238\"], [\"2013-10-23\", \"236\"], [\"2014-01-20\", \"203\"], [\"2014-07-18\", \"216\"], [\"2013-09-08\", \"173\"], [\"2013-10-12\", \"162\"], [\"2014-05-01\", \"146\"], [\"2013-08-26\", \"184\"], [\"2013-08-31\", \"146\"], [\"2013-10-18\", \"129\"], [\"2013-08-01\", \"246\"], [\"2013-09-23\", \"177\"], [\"2014-07-24\", \"185\"], [\"2013-12-08\", \"141\"], [\"2013-07-28\", \"187\"], [\"2014-04-05\", \"164\"], [\"2013-09-01\", \"119\"], [\"2013-09-29\", \"136\"], [\"2013-11-26\", \"124\"], [\"2014-04-28\", \"125\"], [\"2013-09-16\", \"121\"], [\"2013-11-29\", \"256\"], [\"2013-12-14\", \"100\"], [\"2014-02-06\", \"224\"], [\"2014-06-26\", \"168\"], [\"2013-08-20\", \"180\"], [\"2014-07-07\", \"171\"], [\"2013-08-17\", \"253\"], [\"2014-02-22\", \"128\"], [\"2013-08-03\", \"183\"], [\"2014-02-12\", \"207\"], [\"2014-05-04\", \"164\"], [\"2014-05-06\", \"265\"], [\"2013-12-10\", \"160\"], [\"2014-01-19\", \"217\"], [\"2014-03-27\", \"152\"], [\"2014-04-15\", \"180\"], [\"2014-04-30\", \"121\"], [\"2013-08-30\", \"114\"], [\"2013-09-12\", \"180\"], [\"2013-10-26\", \"118\"], [\"2014-01-16\", \"194\"], [\"2014-06-20\", \"140\"], [\"2013-12-19\", \"124\"], [\"2014-01-12\", \"215\"], [\"2014-03-18\", \"252\"], [\"2014-01-26\", \"154\"], [\"2013-08-16\", \"131\"], [\"2014-03-01\", \"258\"], [\"2014-03-07\", \"188\"], [\"2014-03-28\", \"180\"], [\"2013-09-30\", \"235\"], [\"2014-05-23\", \"139\"], [\"2014-07-09\", \"150\"], [\"2014-07-10\", \"183\"], [\"2014-01-23\", \"220\"], [\"2013-09-09\", \"245\"], [\"2013-11-23\", \"251\"], [\"2014-01-07\", \"163\"], [\"2014-03-11\", \"204\"], [\"2014-05-30\", \"102\"], [\"2014-01-22\", \"209\"], [\"2014-04-04\", \"221\"], [\"2014-07-12\", \"166\"], [\"2013-10-07\", \"101\"], [\"2013-10-24\", \"131\"], [\"2014-05-20\", \"216\"], [\"2014-06-29\", \"121\"], [\"2013-09-22\", \"192\"], [\"2013-10-08\", \"252\"], [\"2013-11-25\", \"133\"], [\"2013-08-02\", \"224\"], [\"2013-08-13\", \"73\"], [\"2013-08-12\", \"255\"], [\"2014-04-08\", \"233\"], [\"2014-05-16\", \"263\"], [\"2014-05-22\", \"104\"], [\"2014-06-03\", \"130\"], [\"2014-02-26\", \"141\"], [\"2014-05-10\", \"196\"], [\"2014-06-24\", \"130\"], [\"2013-08-21\", \"122\"], [\"2014-04-09\", \"261\"], [\"2014-07-16\", \"147\"], [\"2013-12-16\", \"114\"], [\"2014-01-28\", \"197\"], [\"2014-02-03\", \"197\"], [\"2014-07-05\", \"233\"], [\"2013-12-06\", \"256\"], [\"2014-01-11\", \"281\"], [\"2013-08-23\", \"207\"], [\"2014-06-02\", \"228\"], [\"2014-03-24\", \"134\"], [\"2014-03-12\", \"238\"], [\"2014-05-26\", \"144\"], [\"2014-06-08\", \"225\"], [\"2014-01-08\", \"122\"], [\"2013-10-20\", \"154\"], [\"2013-10-27\", \"215\"], [\"2014-04-03\", \"241\"], [\"2017-05-01\", \"6\"], [\"2014-02-07\", \"228\"], [\"2013-10-30\", \"126\"], [\"2014-02-08\", \"163\"], [\"2014-03-16\", \"187\"], [\"2013-08-15\", \"200\"], [\"2013-10-09\", \"124\"], [\"2013-11-18\", \"179\"], [\"2014-02-11\", \"205\"], [\"2013-12-20\", \"259\"], [\"2014-01-17\", \"149\"], [\"2014-03-05\", \"194\"], [\"2014-06-14\", \"255\"], [\"2014-06-21\", \"92\"], [\"2013-07-25\", \"142\"], [\"2013-10-02\", \"239\"], [\"2014-01-29\", \"158\"], [\"2014-07-22\", \"137\"], [\"2014-02-17\", \"184\"], [\"2014-05-18\", \"185\"], [\"2013-12-04\", \"182\"], [\"2014-04-17\", \"113\"], [\"2014-03-20\", \"177\"], [\"2013-08-06\", \"258\"], [\"2014-01-24\", \"159\"], [\"2014-06-07\", \"191\"], [\"2013-09-02\", \"202\"], [\"2013-11-24\", \"292\"], [\"2014-02-21\", \"200\"], [\"2014-06-10\", \"137\"], [\"2014-07-17\", \"162\"], [\"2014-01-13\", \"179\"], [\"2014-01-14\", \"209\"], [\"2013-09-13\", \"103\"], [\"2013-07-26\", \"269\"], [\"2013-10-15\", \"174\"], [\"2014-04-02\", \"266\"], [\"2013-11-16\", \"120\"], [\"2013-10-14\", \"139\"], [\"2014-01-21\", \"259\"], [\"2014-02-09\", \"240\"], [\"2014-05-19\", \"97\"], [\"2014-06-23\", \"149\"], [\"2014-05-07\", \"217\"], [\"2014-06-09\", \"269\"], [\"2014-06-27\", \"253\"], [\"2013-11-28\", \"245\"], [\"2013-09-17\", \"134\"], [\"2013-10-22\", \"125\"], [\"2013-12-24\", \"170\"], [\"2014-01-10\", \"241\"], [\"2013-10-06\", \"249\"], [\"2013-11-09\", \"253\"], [\"2014-04-07\", \"115\"], [\"2013-12-09\", \"145\"], [\"2013-10-19\", \"188\"], [\"2013-11-21\", \"143\"], [\"2014-07-19\", \"223\"], [\"2013-09-19\", \"206\"], [\"2014-03-21\", \"187\"], [\"2014-06-13\", \"260\"], [\"2014-02-24\", \"180\"], [\"2014-01-09\", \"207\"], [\"2014-02-13\", \"203\"], [\"2014-06-11\", \"132\"], [\"2013-11-02\", \"151\"], [\"2014-01-25\", \"104\"], [\"2013-09-06\", \"276\"], [\"2013-12-07\", \"234\"], [\"2014-03-03\", \"266\"], [\"2014-03-08\", \"100\"], [\"2014-05-09\", \"263\"], [\"2013-09-26\", \"252\"], [\"2013-10-13\", \"277\"], [\"2013-12-27\", \"162\"], [\"2014-04-25\", \"249\"], [\"2014-05-27\", \"85\"], [\"2014-07-21\", \"235\"], [\"2014-03-02\", \"117\"], [\"2014-04-10\", \"252\"], [\"2014-05-03\", \"192\"], [\"2013-12-21\", \"215\"], [\"2014-06-01\", \"176\"], [\"2014-01-15\", \"243\"], [\"2014-02-04\", \"151\"], [\"2014-04-21\", \"266\"], [\"2014-03-26\", \"246\"], [\"2013-01-01\", \"1\"], [\"2013-08-07\", \"203\"], [\"2013-10-04\", \"287\"], [\"2013-11-20\", \"223\"], [\"2014-07-11\", \"138\"], [\"2013-12-01\", \"239\"], [\"2013-09-24\", \"254\"], [\"2013-10-17\", \"163\"], [\"2013-11-14\", \"287\"], [\"2014-02-05\", \"137\"], [\"2013-07-30\", \"227\"], [\"2014-03-13\", \"165\"], [\"2013-09-03\", \"218\"], [\"2014-06-17\", \"142\"], [\"2013-08-05\", \"153\"], [\"2013-11-17\", \"155\"], [\"2014-02-19\", \"268\"], [\"2014-04-12\", \"232\"], [\"2013-11-15\", \"135\"], [\"2014-06-05\", \"155\"], [\"2013-08-08\", \"154\"], [\"2014-01-02\", \"111\"], [\"2013-12-12\", \"157\"], [\"2014-02-20\", \"145\"], [\"2014-03-06\", \"216\"], [\"2014-06-25\", \"258\"], [\"2013-12-03\", \"237\"], [\"2013-09-27\", \"264\"], [\"2014-05-14\", \"167\"], [\"2013-07-29\", \"253\"], [\"2014-01-05\", \"266\"], [\"2014-01-18\", \"139\"], [\"2014-04-14\", \"105\"], [\"2014-05-12\", \"246\"], [\"2013-11-05\", \"278\"], [\"2014-06-22\", \"118\"], [\"2013-09-10\", \"232\"], [\"2014-05-13\", \"201\"], [\"2013-08-25\", \"200\"], [\"2013-12-17\", \"132\"], [\"2013-10-05\", \"215\"], [\"2013-10-16\", \"127\"], [\"2014-04-27\", \"258\"], [\"2013-11-13\", \"236\"], [\"2014-01-06\", \"155\"], [\"2014-03-04\", \"257\"], [\"2014-04-23\", \"220\"], [\"2013-12-13\", \"135\"], [\"2014-06-16\", \"221\"], [\"2014-07-08\", \"260\"], [\"2013-10-28\", \"153\"], [\"2014-06-18\", \"179\"], [\"2013-10-01\", \"111\"], [\"2014-03-30\", \"250\"], [\"2014-07-15\", \"274\"], [\"2013-08-22\", \"186\"], [\"2014-06-12\", \"157\"], [\"2014-01-03\", \"250\"], [\"2014-04-29\", \"238\"], [\"2013-11-19\", \"188\"], [\"2014-05-29\", \"141\"], [\"2013-12-22\", \"249\"], [\"2014-02-23\", \"175\"], [\"2014-02-27\", \"193\"], [\"2014-03-25\", \"113\"], [\"2013-08-10\", \"270\"], [\"2013-08-18\", \"199\"], [\"2013-09-25\", \"277\"], [\"2013-10-29\", \"128\"], [\"2013-12-05\", \"241\"], [\"2014-02-25\", \"259\"], [\"2014-04-19\", \"116\"], [\"2014-07-03\", \"174\"], [\"2014-12-29\", \"104\"], [\"2014-05-28\", \"236\"], [\"2014-06-15\", \"128\"], [\"2014-06-28\", \"134\"], [\"2014-03-10\", \"235\"], [\"2014-03-22\", \"223\"], [\"2014-04-24\", \"124\"], [\"2013-07-31\", \"252\"], [\"2014-03-31\", \"263\"], [\"2013-08-04\", \"187\"], [\"2013-08-24\", \"265\"], [\"2013-09-20\", \"139\"], [\"2013-10-10\", \"155\"], [\"2014-06-30\", \"169\"], [\"2013-12-11\", \"255\"], [\"2014-03-29\", \"96\"], [\"2014-07-14\", \"161\"], [\"2014-05-08\", \"99\"], [\"2013-09-05\", \"261\"], [\"2014-03-14\", \"201\"], [\"2014-01-30\", \"254\"], [\"2014-04-20\", \"195\"], [\"2014-05-11\", \"227\"], [\"2013-07-27\", \"202\"], [\"2014-03-17\", \"91\"], [\"2013-11-06\", \"234\"], [\"2013-12-25\", \"217\"], [\"2014-02-16\", \"253\"], [\"2014-05-31\", \"146\"], [\"2013-11-27\", \"164\"], [\"2013-08-09\", \"125\"], [\"2014-12-30\", \"187\"], [\"2013-09-28\", \"202\"], [\"2013-08-28\", \"116\"], [\"2013-09-07\", \"215\"], [\"2013-12-15\", \"220\"], [\"2014-07-01\", \"189\"], [\"2014-01-01\", \"135\"], [\"2014-07-20\", \"285\"], [\"2014-04-01\", \"223\"], [\"2014-05-15\", \"149\"], [\"2014-05-25\", \"125\"], [\"2013-11-07\", \"232\"], [\"2014-07-02\", \"131\"], [\"2014-07-23\", \"165\"], [\"2013-09-15\", \"140\"], [\"2013-10-31\", \"208\"], [\"2014-02-01\", \"278\"], [\"2013-08-11\", \"154\"], [\"2014-04-26\", \"251\"], [\"2014-07-13\", \"221\"], [\"2013-10-21\", \"116\"], [\"2014-06-06\", \"198\"], [\"2013-08-14\", \"193\"], [\"2014-12-31\", \"266\"], [\"2014-04-22\", \"144\"], [\"2014-06-19\", \"276\"], [\"2013-11-03\", \"347\"], [\"2013-11-04\", \"254\"], [\"2013-12-18\", \"230\"], [\"2013-08-29\", \"218\"], [\"2014-07-06\", \"106\"], [\"2013-09-04\", \"96\"], [\"2013-09-18\", \"249\"], [\"2013-11-22\", \"249\"], [\"2014-01-27\", \"163\"], [\"2013-11-30\", \"255\"], [\"2014-01-04\", \"129\"], [\"2013-10-25\", \"158\"], [\"2013-11-08\", \"170\"], [\"2013-09-21\", \"158\"], [\"2014-05-24\", \"213\"], [\"2013-11-01\", \"229\"], [\"2014-02-10\", \"232\"], [\"2014-03-23\", \"211\"], [\"2014-04-16\", \"140\"], [\"2014-06-04\", \"117\"], [\"2013-09-14\", \"276\"], [\"2014-05-05\", \"171\"], [\"2013-10-03\", \"154\"], [\"2013-11-12\", \"182\"], [\"2014-03-19\", \"130\"], [\"2014-07-04\", \"153\"], [\"2014-02-02\", \"192\"], [\"2013-12-02\", \"99\"], [\"2013-12-23\", \"154\"], [\"2014-02-15\", \"221\"], [\"2014-03-15\", \"247\"], [\"2014-04-11\", \"147\"], [\"2014-05-21\", \"212\"], [\"2014-04-06\", \"108\"]]'\u003c/div\u003e"},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\nfrom IPython.display import display\n\ntop10ProductsByViews = spark.sql(\"select url as URL, count(*) as Views from ecommerce_db.access_logs where url like '%\\/product\\/%' group by url order by Views desc limit 10\")\ntop10ProductsByViewsPDF = top10ProductsByViews.toPandas()\n\ndisplay(top10ProductsByViewsPDF)","metadata":{"qubole":{"spark_progress":[{"jobId":13,"name":"toPandas at \u003cstdin\u003e:5","submissionTime":"2020-09-17T01:53:14.704GMT","completionTime":"2020-09-17T01:53:16.640GMT","stageIds":[24,25,26],"jobGroup":"14","status":"SUCCEEDED","numTasks":203,"numActiveTasks":0,"numCompletedTasks":203,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":203,"numActiveStages":0,"numCompletedStages":3,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruejobs/job/?id=13","stages":[{"stageId":24,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=24\u0026attempt=0"},{"stageId":25,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=25\u0026attempt=0"},{"stageId":26,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=2174810\u0026encodedUrl=http%3A%2F%2F10.0.2.39%3A8088%2Fproxy%2Fapplication_1600306013264_0005%2F%3Fspark%3Dtruestages/stage/?id=26\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-09-17T01:53:14.231699Z","ended_at":"2020-09-17T01:53:17.614276Z","user_email":"sdabade@qubole.com","cluster":"jupyter-demo","clusterType":"cluster"}},"trusted":true},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"                                                 URL  Views\n0  /department/apparel/category/cleats/product/Pe...   1926\n1  /department/apparel/category/featured%20shops/...   1793\n2  /department/golf/category/women's%20apparel/pr...   1780\n3  /department/apparel/category/men's%20footwear/...   1757\n4  /department/fan%20shop/category/water%20sports...   1104\n5  /department/fan%20shop/category/indoor/outdoor...   1084\n6  /department/fan%20shop/category/camping%20\u0026%20...   1059\n7  /department/fan%20shop/category/fishing/produc...   1028\n8  /department/footwear/category/cardio%20equipme...   1004\n9  /department/footwear/category/fitness%20access...    939\n/usr/lib/environs/e-a-2019.03-py-3.7.3/lib/python3.7/site-packages/pyarrow/__init__.py:152: UserWarning: pyarrow.open_stream is deprecated, please use pyarrow.ipc.open_stream\n  warnings.warn(\"pyarrow.open_stream is deprecated, please use \"","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}